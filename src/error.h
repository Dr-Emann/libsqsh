/**
 * @author      : Enno Boland (mail@eboland.de)
 * @file        : error
 * @created     : Saturday May 08, 2021 20:03:38 CEST
 */

#include "utils.h"

#ifndef SQUASH_ERROR_H

#define SQUASH_ERROR_H

#define SQUASH_ERROR_SECTION (1 << 8)
enum SquashError {
	// Avoid collisions with errno
	SQUASH_ERROR_SUPERBLOCK_TOO_SMALL = SQUASH_ERROR_SECTION + 1,
	SQUASH_ERROR_WRONG_MAGIG,
	SQUASH_ERROR_BLOCKSIZE_MISSMATCH,
	SQUASH_ERROR_SIZE_MISSMATCH,
	SQUASH_ERROR_CHECKFLAG_SET,
	SQUASH_ERROR_METABLOCK_UNSUPPORTED_COMPRESSION,
	SQUASH_ERROR_METABLOCK_INFO_IS_COMPRESSED,
	SQUASH_ERROR_METABLOCK_ZERO_SIZE,
	SQUASH_ERROR_METABLOCK_INIT,
	SQUASH_ERROR_COMPRESSION_INIT,
	SQUASH_ERROR_COMPRESSION_DECOMPRESS,
	SQUASH_ERROR_UNKOWN_INODE_TYPE,
	SQUASH_ERROR_COMPRESSION_STREAM_INIT,
	SQUASH_ERROR_COMPRESSION_STREAM_CLEANUP,
	SQUASH_ERROR_STREAM_NOT_ENOUGH_BYTES,
	SQUASH_ERROR_GZIP_HEADER_TOO_SMALL,
	SQUASH_ERROR_GZIP_HEADER_READ,
	SQUASH_ERROR_GZIP_READ_AFTER_END,
	SQUASH_ERROR_NOT_A_DIRECTORY,
	SQUASH_ERROR_NOT_A_FILE,
	SQUASH_ERROR_MALLOC_FAILED,
	SQUASH_ERROR_DIRECTORY_INIT,
	SQUASH_ERROR_INODE_INIT,
	SQUASH_ERROR_INTEGER_OVERFLOW,
	SQUASH_ERROR_NO_SUCH_FILE,
	SQUASH_ERROR_TODO,
};

void squash_perror(int error_code, const char *msg);

SQUASH_NO_UNUSED const char *squash_error_str(int errorcode);

#endif /* end of include guard SQUASH_ERROR_H */
