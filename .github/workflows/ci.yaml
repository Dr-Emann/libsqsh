name: CI
on:
- push
jobs:
  test:
    strategy:
      matrix:
        arch:
          #- i386
          - x86_64
    runs-on: ubuntu-latest
    container:
      image: gottox/sqsh-build:${{ matrix.arch }}
      options: --privileged
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: configure
      run: |
        CC=clang meson setup /tmp/build \
          -Dcurl=false  \
          -Dzlib=true \
          -Dlz4=true \
          -Dlzma=true  \
          -Dlzo=true  \
          -Dzstd=true  \
          -Dtest=extended \
          -Ddoc=false
    - name: test
      run: |
        cd /tmp/build
        meson test --wrap='valgrind --leak-check=full --error-exitcode=1'

  plain-build:
    runs-on: ubuntu-latest
    container: gottox/sqsh-build:${{ matrix.arch }}
    strategy:
      matrix:
        cc:
          - gcc
          - clang
        arch:
          #- i386
          - x86_64
    steps:
    - uses: actions/checkout@v3
    - name: build
      run: |
        CC=${{ matrix.cc }}
        $CC -o sqsh-ls tools/ls.c $(find lib -name '*.c') -L/lib \
          -DCONFIG_CURL -lcurl \
          -DCONFIG_ZLIB -lz \
          -DCONFIG_LZ4 -llz4 \
          -DCONFIG_LZMA -llzma \
          -DCONFIG_LZO -DCONFIG_LZO_HELPER_PATH='"/usr/libexec/sqsh-lzo-helper"' \
          -DCONFIG_ZSTD -lzstd

  build:
    runs-on: ubuntu-latest
    container: gottox/sqsh-build:${{ matrix.arch }}
    strategy:
      matrix:
        cc:
          - gcc
          - clang
        feature:
          - true
          - false
        arch:
          #- i386
          - x86_64
    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: |
        CC=${{ matrix.cc }} meson setup /tmp/build \
          -Dcurl=${{ matrix.feature }} \
          -Dzlib=${{ matrix.feature }} \
          -Dlz4=${{ matrix.feature }} \
          -Dlzma=${{ matrix.feature }} \
          -Dlzo=${{ matrix.feature }} \
          -Dzstd=${{ matrix.feature }} \
          -Dtest=false \
          -Ddoc=false
    - name: build
      run: |
         ninja -C /tmp/build

  doxygen:
    needs:
    - build
    - test
    runs-on: ubuntu-latest
    container: gottox/sqsh-build:latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: configure
      run: |
        git config --global --add safe.directory $PWD
        CC=clang meson setup /tmp/build \
          -Dcurl=false \
          -Dzlib=true \
          -Dlz4=false\
          -Dlzma=false \
          -Dlzo=false \
          -Dzstd=false \
          -Dtest=false \
          -Ddoc=true
    - name: generate
      if: ${{ github.ref_type == 'tag' }}
      run: |
        cd /tmp/build
        meson compile doc
    - name: deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref_type == 'tag' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: /tmp/build/doc/html
